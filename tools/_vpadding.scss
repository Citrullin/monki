@mixin getVerticalPaddingWithoutPrefix($number, $base_padding, $type){
  @for $i from 1 through $number{
    .o-vpadding-#{$i}{
      padding-top: ($base_padding*$i)+$type;
      padding-bottom: ($base_padding*$i)+$type;
    }
  }
}

@mixin getVerticalPaddingWithPrefix($prefix, $number, $base_padding, $type){
  @for $i from 1 through $number{
    .o-vpadding-#{$i}\@#{$prefix}{
      padding-top: ($base_padding*$i)+$type;
      padding-bottom: ($base_padding*$i)+$type;
    }
  }
}

@mixin generateVerticalOffset($number, $base_padding, $type, $prefix: false, $min-width: false, $max-width: false, $none:false){
  @if (type-of($min_width) == 'bool'){
    @if($none){
      @include getVerticalPaddingWithoutPrefix($number, $base_padding, $type)
    }
    @else{
      @include getVerticalPaddingWithPrefix($prefix, $number, $base_padding, $type)
    }
  }
  @else if (type-of($max_width) == 'bool'){
    @media (min-width: $min_width){
      @include getVerticalPaddingWithPrefix($prefix, $number, $base_padding, $type)
    }
  }
  @else if (type-of($min_width) == 'number' and type_of($max_width) == 'number'){
    @media (min-width: $min_width) and (max-width: $max_width){
      @include getVerticalPaddingWithPrefix($prefix, $number, $base_padding, $type)
    }
  }
}