@mixin getWrapperWithPadding($wrapper_padding){
  .o-wrapper{
    margin: 0 auto;
    padding: 0 $wrapper_padding;
  }
}

@mixin getGridCSSForPrefix($prefix, $grid_number, $padding, $use-flex-basis){
  @for $i from 1 through $grid_number{
    @if($use-flex-basis){
      .o-flex-basis-#{($i/$grid_number)*100}\@#{$prefix}{
        flex-basis: ($i/$grid_number)*100%;
      }
    }

    .o-grid-#{$i}\@#{$prefix}{
      flex: $i;

      padding-right: $padding+$padding-type;
      padding-left: $padding+$padding-type;
    }

    .o-grid-#{$i}--no-padding\@#{$prefix}{
      flex: $i;

      padding-right: 0;
      padding-left: 0;
    }
  }
}

@mixin getGridCSSWithoutPrefix($grid_number, $padding, $use-flex-basis){
  @for $i from 1 through $grid_number{
    @if($use-flex-basis){
      .o-flex-basis-#{($i/$grid_number)*100}{
        flex-basis: ($i/$grid_number)*100%;
      }
    }

    .o-grid-#{$i}{
      flex: $i;

      padding-right: $padding+$padding-type;
      padding-left: $padding+$padding-type;
    }

    .o-grid-#{$i}--no-padding{
      flex: $i;

      padding-right: 0;
      padding-left: 0;
    }

  }
}

@mixin getContainerForPrefix($prefix){
  .o-container\@#{$prefix}{
    list-style: none;

    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;

    -webkit-flex-flow: row wrap;
    flex-flow: row wrap;
    flex-wrap: wrap;
    justify-content: $default-justify-content;
  }

  .o-container--column\@#{$prefix}{

    -webkit-flex-flow: column nowrap;
    flex-flow: column nowrap;
    justify-content: $default-justify-content;
  }

  .o-container--center\@#{$prefix}{
    -webkit-flex-direction: row; /* works with row or column */
    flex-direction: row;
    -webkit-align-items: center;
    align-items: center;
    -webkit-justify-content: center;
    justify-content: center;
  }

  .o-container--left\@#{$prefix}{
    -webkit-flex-direction: row; /* works with row or column */
    flex-direction: row;
    -webkit-align-items: center;
    align-items: center;
    -webkit-justify-content: flex-start;
    justify-content: flex-start;
  }

  .o-container--stretch\@#{$prefix}{
    -webkit-align-items: center;
    align-items: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-flex-flow: column wrap;
    flex-flow: column wrap;
    -webkit-align-content: stretch;
    align-content: stretch;
  }
}

@mixin getContainerWithoutPrefix(){
  .o-container{
    list-style: none;

    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;

    -webkit-flex-flow: row wrap;
    flex-flow: row wrap;
    flex-wrap: wrap;
    justify-content: $default-justify-content;
  }

  .o-container--column{
    -webkit-flex-flow: column nowrap;
    flex-flow: column nowrap;
    justify-content: $default-justify-content;
  }

  .o-container--center{
    -webkit-flex-direction: row; /* works with row or column */
    flex-direction: row;
    -webkit-align-items: center;
    align-items: center;
    -webkit-justify-content: center;
    justify-content: center;
  }

  .o-container--stretch{
    -webkit-align-items: center;
    align-items: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-flex-flow: column wrap;
    flex-flow: column wrap;
    -webkit-align-content: stretch;
    align-content: stretch;
  }

  .o-container--left{
    -webkit-flex-direction: row; /* works with row or column */
    flex-direction: row;
    -webkit-align-items: center;
    align-items: center;
    -webkit-justify-content: flex-start;
    justify-content: flex-start;
  }
}

@mixin
generateGrid(
  $grid_number, $padding, $wrapper-multiplier,
  $min_width: false, $max_width: false,
  $use-flex-basis: false, $prefix: false,
  $none: false
){
  @if (type-of($min_width) == 'bool'){
    @if($none){
      @include getContainerWithoutPrefix();
      @include getGridCSSWithoutPrefix($grid_number, $padding, $use-flex-basis)
    }
    @else{
      @include getWrapperWithPadding($padding*$wrapper-multiplier+$padding-type);
      @include getContainerForPrefix($prefix);
      @include getGridCSSForPrefix($prefix, $grid_number, $padding, $use-flex-basis)
    }
  }
  @else if (type-of($max_width) == 'bool'){
    @media (min-width: $min_width){
      @include getWrapperWithPadding($padding*$wrapper-multiplier+$padding-type);
      @include getContainerForPrefix($prefix);
      @include getGridCSSForPrefix($prefix, $grid_number, $padding, $use-flex-basis)
    }
  }
  @else if (type-of($min_width) == 'number' and type_of($max_width) == 'number'){
    @media (min-width: $min_width) and (max-width: $max_width){
      @include getWrapperWithPadding($padding*$wrapper-multiplier+$padding-type);
      @include getContainerForPrefix($prefix);
      @include getGridCSSForPrefix($prefix, $grid_number, $padding, $use-flex-basis)
    }
  }
}